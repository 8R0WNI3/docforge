#!/usr/bin/env bash

set -e
export GO111MODULE=on

# For the check step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.

if [[ $(uname) == 'Darwin' ]]; then
  READLINK_BIN="greadlink"
else
  READLINK_BIN="readlink"
fi

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$($READLINK_BIN -f "$(dirname ${0})/..")"
else
  export SOURCE_PATH="$($READLINK_BIN -f ${SOURCE_PATH})"
fi

cd ${SOURCE_PATH}

# Build Golint.
go get -u golang.org/x/lint/golint

executable=${GOPATH}/bin/golint
if [ -z ${GOPATH+x} ]; then
  echo "GOPATH not set. Trying with HOME/go/bin"
  if [ -f ${HOME}/go/bin/golint ]; then
    executable=${HOME}/go/bin/golint
  else
    echo "HOME/go/bin/golint not found. Set GOPATH"
    Exit 1
  fi
fi

###############################################################################
PACKAGES="$(go list -e ./...)"
PACKAGES_DIRS="$(echo ${PACKAGES} | sed "s|github.com/gardener/docforge|.|g")"

# Execute static code checks.
go vet ${PACKAGES}

# Execute automatic code formatting directive.
gofmt -l -w ${PACKAGES_DIRS}

# Execute lint checks.
for package in ${PACKAGES_DIRS}; do
  $executable -set_exit_status $(find $package -maxdepth 1 -name "*.go | grep -vE '_test.go'")
done

echo "Done"